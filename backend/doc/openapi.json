{
  "openapi": "3.0.0",
  "info": {
    "title": "Flash-Cards API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://flash-cards.sachathommet.fr/api"
    }
  ],
  "tags": [
    {
      "name": "card",
      "description": "Everything about cards/questions/answers"
    },
    {
      "name": "theme",
      "description": "Everything about themes"
    }
  ],
  "paths": {
    "/cards": {
      "get": {
        "tags": [
          "card"
        ],
        "summary": "List all cards",
        "responses": {
          "200": {
            "description": "All cards"
          }
        }
      },
      "post": {
        "tags": [
          "card"
        ],
        "summary": "Create a new card",
        "requestBody": {
          "description": "Card data",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "card_theme"
                ],
                "properties": {
                  "card_theme": {
                    "description": "Theme of the card",
                    "type": "integer"
                  },
                  "question_text": {
                    "description": "Text of the question",
                    "type": "string"
                  },
                  "question_image": {
                    "description": "Image of the question",
                    "type": "string",
                    "format": "binary"
                  },
                  "answer_text": {
                    "description": "Text of the answer",
                    "type": "string"
                  },
                  "answer_image": {
                    "description": "Image of the answer",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Card not created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    },
                    "cause": {
                      "description": "why the request failed",
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "cause": "wrong id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cards/{theme_id}": {
      "get": {
        "tags": [
          "card"
        ],
        "summary": "List all cards of a given theme",
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "ID of the theme",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All cards of a given theme"
          }
        }
      }
    },
    "/cards/{theme_id}/{count}": {
      "get": {
        "tags": [
          "card"
        ],
        "summary": "List n cards of a given theme, ordered by their score",
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "ID of the theme",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "count",
            "in": "path",
            "description": "Number of cards to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "N cards of a given theme, ordered by their score"
          }
        }
      }
    },
    "/cards/{card_id}": {
      "post": {
        "tags": [
          "card"
        ],
        "summary": "Modify a card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "ID of the card",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Card data",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "card_theme"
                ],
                "properties": {
                  "card_theme": {
                    "description": "Theme of the card",
                    "type": "integer"
                  },
                  "card_score": {
                    "description": "Score of the card (0-MAX_CARD_SCORE=6)",
                    "type": "integer"
                  },
                  "question_text": {
                    "description": "Text of the question",
                    "type": "string"
                  },
                  "question_image": {
                    "description": "Image of the question",
                    "type": "string",
                    "format": "binary"
                  },
                  "answer_text": {
                    "description": "Text of the answer",
                    "type": "string"
                  },
                  "answer_image": {
                    "description": "Image of the answer",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card modified",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Card not modified",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    },
                    "cause": {
                      "description": "why the request failed",
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "cause": "wrong id"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "card"
        ],
        "summary": "Delete a card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "ID of the card",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card deleted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Card not deleted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    },
                    "cause": {
                      "description": "why the request failed",
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "cause": "wrong id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/themes": {
      "get": {
        "tags": [
          "theme"
        ],
        "summary": "List all themes",
        "responses": {
          "200": {
            "description": "List of all themes"
          }
        }
      },
      "post": {
        "tags": [
          "theme"
        ],
        "summary": "Create a new theme",
        "requestBody": {
          "description": "Theme data",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "theme_name": {
                    "description": "Name of the theme",
                    "type": "string"
                  },
                  "theme_image": {
                    "description": "Image of the theme",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Theme not created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    },
                    "cause": {
                      "description": "why the request failed",
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "cause": "wrong id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/themes/{theme_id}": {
      "post": {
        "tags": [
          "theme"
        ],
        "summary": "Modify a theme",
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "ID of the theme",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Theme data",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "theme_name": {
                    "description": "Name of the theme",
                    "type": "string"
                  },
                  "theme_image": {
                    "description": "Image of the theme",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme modified",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Theme not modified",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    },
                    "cause": {
                      "description": "why the request failed",
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "cause": "wrong id"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "theme"
        ],
        "summary": "Delete a theme",
        "parameters": [
          {
            "name": "theme_id",
            "in": "path",
            "description": "ID of the theme",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Theme deleted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Theme not deleted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "if the request succeeded",
                      "type": "boolean"
                    },
                    "cause": {
                      "description": "why the request failed",
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "cause": "wrong id"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
